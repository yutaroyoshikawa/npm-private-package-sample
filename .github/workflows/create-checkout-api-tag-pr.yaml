name: create-checkout-api-tag-pr

on:
  workflow_dispatch:
    inputs:
      api_version_tag:
        required: true

jobs:
  checkout-api-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Checkout api tag
        working-directory: ./submodules/spa_guide_sns_server
        env:
          GIT_TAG: ${{ github.event.inputs.api_version_tag }}
        run: |
          git checkout v${GIT_TAG}
      - name: Commit diff
        env:
          GIT_TAG: ${{ github.event.inputs.api_version_tag }}
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          BRANCH_NAME: api_version_tag/v${{ github.event.inputs.api_version_tag }}
        run: |
          git config --global user.name "${GIT_AUTHOR_NAME}"
          git config --global user.email "${GIT_AUTHOR_EMAIL}"
          git switch -c ${BRANCH_NAME}
          git add -A && git commit -m "chore: checkout API version v${GIT_TAG}"
          git push -u origin ${BRANCH_NAME}
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install-deps
        uses: ./.github/actions/install-deps
  code-generate:
    runs-on: ubuntu-latest
    needs:
      - checkout-api-tag
      - install-deps
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: code-generate
        uses: ./.github/actions/code-generate
  build-app:
    runs-on: ubuntu-latest
    needs:
      - code-generate
    steps:
      - uses: actions/checkout@v3
      - name: build-app
        uses: ./.github/actions/build-app
  create-pr:
    runs-on: ubuntu-latest
    needs:
      - build-app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v3
        env:
          GIT_TAG: ${{ github.event.inputs.api_version_tag }}
          BRANCH_NAME: api_version_tag/v${{ github.event.inputs.api_version_tag }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: checkout API version v${process.env.GIT_TAG}`,
              head: process.env.BRANCH_NAME,
              base: "main",
              body: `Checkout API version v${process.env.GIT_TAG}`,
              labels: ['Dependencies']
            })
